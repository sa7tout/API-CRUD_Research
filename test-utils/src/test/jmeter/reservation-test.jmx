<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Reservation System Performance Test">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
    </TestPlan>
    <hashTree>
      <!-- REST API Tests -->
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="REST API Test">
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Reservation">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${__FileToString(${testData},,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.path">/api/reservations</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
        </HTTPSamplerProxy>
      </hashTree>

      <!-- GraphQL API Tests -->
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="GraphQL API Test">
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController">
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Reservation">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.value">
                  mutation {
                    createReservation(input: ${__FileToString(${testData},,)}) {
                      id
                      client { id nom prenom }
                      chambre { id type prix }
                      dateDebut
                      dateFin
                    }
                  }
                </stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8081</stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
        </HTTPSamplerProxy>
      </hashTree>

      <!-- SOAP API Tests -->
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="SOAP API Test">
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController">
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Reservation">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.value">
                  &lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
                                    xmlns:res="http://hotel.com/soap/api"&gt;
                    &lt;soapenv:Header/&gt;
                    &lt;soapenv:Body&gt;
                      ${__FileToString(${testData},,)}
                    &lt;/soapenv:Body&gt;
                  &lt;/soapenv:Envelope&gt;
                </stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8082</stringProp>
          <stringProp name="HTTPSampler.path">/ws</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
        </HTTPSamplerProxy>
      </hashTree>

      <!-- gRPC Tests -->
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="gRPC API Test">
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController">
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.a7soft.jmeter.grpc.GRPCSampler guiclass="com.a7soft.jmeter.grpc.GRPCSamplerGui" testname="gRPC Request">
          <stringProp name="GRPCSampler.protoFolder">src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libraryFolder">target/lib</stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">9090</stringProp>
          <stringProp name="GRPCSampler.fullMethod">com.hotel.grpc.ReservationService/createReservation</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
        </com.a7soft.jmeter.grpc.GRPCSampler>
      </hashTree>

      <!-- Listeners -->
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree"/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report"/>
      <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results"/>

      <!-- Backend Listeners for Prometheus -->
      <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Prometheus Listener">
        <elementProp name="arguments" elementType="Arguments">
          <collectionProp name="Arguments.arguments">
            <elementProp name="prometheusUrl" elementType="Argument">
              <stringProp name="Argument.name">prometheusUrl</stringProp>
              <stringProp name="Argument.value">http://localhost:9090</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="classname">io.github.johrstrom.listener.PrometheusListener</stringProp>
      </BackendListener>
    </hashTree>
  </hashTree>
</jmeterTestPlan>